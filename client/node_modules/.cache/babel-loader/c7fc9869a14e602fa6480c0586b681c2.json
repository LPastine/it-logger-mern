{"ast":null,"code":"import { ADD_LOG, GET_LOGS, UPDATE_LOG, DELETE_LOG, SET_LOADING, LOGS_ERROR // SEARCH_LOGS, \n, SET_CURRENT, CLEAR_CURRENT } from '../actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log._id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/reducers/logReducer.js"],"names":["ADD_LOG","GET_LOGS","UPDATE_LOG","DELETE_LOG","SET_LOADING","LOGS_ERROR","SET_CURRENT","CLEAR_CURRENT","initialState","logs","current","loading","error","state","action","type","payload","filter","log","_id","console"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,UAJJ,EAKIC,WALJ,EAMIC,UANJ,CAOI;AAPJ,EAQIC,WARJ,EASIC,aATJ,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB,C,CAOA;;AACA,gBAAc,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFV;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,OAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB,CAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,UAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYL,MAAM,CAACE,OAA5C,CAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKN,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKN,UAAL;AACIe,MAAAA,OAAO,CAACR,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAO,EACH,GAAGH,KADA;AAEHD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAzCR;AA2CH,CA5CD","sourcesContent":["import { \n    ADD_LOG,\n    GET_LOGS,\n    UPDATE_LOG,\n    DELETE_LOG, \n    SET_LOADING, \n    LOGS_ERROR, \n    // SEARCH_LOGS, \n    SET_CURRENT, \n    CLEAR_CURRENT \n} from '../actions/types';\n\nconst initialState = {\n    logs: null,\n    current: null,\n    loading: false,\n    error: null\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default(state = initialState, action) => {\n    switch(action.type) {\n        case GET_LOGS:\n            return {\n                ...state,\n                logs: action.payload,\n                loading: false\n            }\n        case ADD_LOG:\n            return {\n                ...state,\n                logs: [...state.logs, action.payload],\n                loading: false\n            }\n        case DELETE_LOG:\n            return {\n                ...state,\n                logs: state.logs.filter(log => log._id !== action.payload),\n                loading: false\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null,\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case LOGS_ERROR:\n            console.error(action.payload);\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}