{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG // DELETE_LOG, \n// UPDATE_LOG,\n// SEARCH_LOGS, \n// SET_CURRENT, \n// CLEAR_CURRENT \n} from './types'; // Get logs from server\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    console.log('Before dispatching');\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Add new log\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","addLog","log","dispatch","setLoading","res","fetch","method","body","JSON","stringify","headers","data","json","console","type","payload","err","response","statusText","getLogs"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,OAJJ,CAKI;AACA;AACA;AACA;AACA;AATJ,OAUO,SAVP,C,CAYA;;AACA,OAAO,MAAMC,MAAM,GAAIC,GAAD,IAAS,MAAMC,QAAN,IAAkB;AAC7C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAa;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAF0B;AAGhCS,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHuB,KAAb,CAAvB;AAOA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACZ,GAAR,CAAY,oBAAZ;AAEAC,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,OADD;AAELgB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GAjBD,CAiBE,OAAOK,GAAP,EAAY;AACVd,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMjB,QAAN,IAAkB;AAC3C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,UAAMM,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEAV,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAElB,QADD;AAELmB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOK,GAAP,EAAY;AACVd,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CAjBM,C,CAoBP;;AACA,OAAO,MAAMf,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHW,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { \n    GET_LOGS, \n    SET_LOADING, \n    LOGS_ERROR, \n    ADD_LOG, \n    // DELETE_LOG, \n    // UPDATE_LOG,\n    // SEARCH_LOGS, \n    // SET_CURRENT, \n    // CLEAR_CURRENT \n} from './types';\n\n// Get logs from server\nexport const addLog = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs',{\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n        console.log('Before dispatching');\n\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Add new log\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n\n// Set loading to true\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    };\n};"]},"metadata":{},"sourceType":"module"}