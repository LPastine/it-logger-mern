{"ast":null,"code":"var _jsxFileName = \"/Users/LP1/Dev/it_logger_fs/client/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  _s();\n\n  useEffect(() => {\n    getLogs(); // es-lint-disable-next-line\n  }, []); // const getLogs = async () => {\n  //     setLoading(true);\n  //     const res = await fetch('/api/logs');\n  //     const data = await res.json();\n  //     setLogs(data);\n  //     setLoading(false);\n  // }\n\n  if (loading || logs === null) {\n    return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No logs to show...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 47\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 37\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Logs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Logs;\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // This prop is set to the 'log' that is set in the root reducer\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/components/logs/Logs.js"],"names":["React","useEffect","connect","LogItem","PreLoader","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BJ,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AAElDL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT,CAFkD,CAOlD;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAGI,OAAO,IAAID,IAAI,KAAK,IAAvB,EAA6B;AACzB,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,gBAAiC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjC,GAEOF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBAAI,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEA;AAAd,OAAwBA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAhB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA9BD;;GAAMN,I;;KAAAA,I;AAgCNA,IAAI,CAACO,SAAL,GAAiB;AACbN,EAAAA,GAAG,EAAEH,SAAS,CAACU,MAAV,CAAiBC,UADT;AAEbV,EAAAA,OAAO,EAAED,SAAS,CAACY,IAAV,CAAeD;AAFX,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9B;AACAX,EAAAA,GAAG,EAAEW,KAAK,CAACX;AAFmB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n\n    useEffect(() => {\n        getLogs();\n        // es-lint-disable-next-line\n    }, []);\n\n    // const getLogs = async () => {\n    //     setLoading(true);\n    //     const res = await fetch('/api/logs');\n    //     const data = await res.json();\n\n    //     setLogs(data);\n    //     setLoading(false);\n    // }\n\n    if(loading || logs === null) {\n        return <PreLoader />\n    }\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">System Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs to show...</p>) : \n                (\n                    logs.map(log => <LogItem log={log} key={log.id} />)\n                )}\n        </ul>\n    )\n}\n\nLogs.propTypes = {\n    log: PropTypes.object.isRequired,\n    getLogs: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    // This prop is set to the 'log' that is set in the root reducer\n    log: state.log,\n});\n\nexport default connect(mapStateToProps, { getLogs })(Logs);\n"]},"metadata":{},"sourceType":"module"}