{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SEARCH_LOGS, SET_CURRENT, CLEAR_CURRENT } from './types'; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Delete log from server\n\nexport const deleteLog = _id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${_id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: _id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Update log from server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/logs/${log._id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Search server logs\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/logs?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SEARCH_LOGS","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addLog","log","method","body","JSON","stringify","headers","deleteLog","_id","updateLog","searchLogs","text","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import { \n    GET_LOGS, \n    SET_LOADING, \n    LOGS_ERROR, \n    ADD_LOG, \n    DELETE_LOG, \n    UPDATE_LOG,\n    SEARCH_LOGS, \n    SET_CURRENT, \n    CLEAR_CURRENT \n} from './types';\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Add new log\nexport const addLog = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs', {\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Delete log from server\nexport const deleteLog = (_id) => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/logs/${_id}`, {\n            method: 'DELETE'\n        });\n\n        dispatch({\n            type: DELETE_LOG,\n            payload: _id\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Update log from server\nexport const updateLog = log => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/api/logs/${log._id}`, {\n            method: 'PUT',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        const data = await res.json();\n\n        dispatch({\n            type: UPDATE_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Search server logs\nexport const searchLogs = (text) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/api/logs?q=${text}`);\n        const data = await res.json();\n\n        dispatch({\n            type: SEARCH_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Set current log\nexport const setCurrent = log => {\n    return {\n        type: SET_CURRENT,\n        payload: log\n    }\n};\n\n// Clear current log\nexport const clearCurrent = () => {\n    return {\n        type: CLEAR_CURRENT\n    }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    };\n};"]},"metadata":{},"sourceType":"module"}