{"ast":null,"code":"var _jsxFileName = \"/Users/LP1/Dev/it_logger_fs/client/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs(); // es-lint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No logs to show...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 47\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Logs, \"ZGhkABdExOczY9obwOnN8RHRH3E=\");\n\n_c = Logs;\nexport default Logs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/components/logs/Logs.js"],"names":["React","useState","useEffect","LogItem","PreLoader","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAY;AACxBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPD;;AASA,MAAGD,OAAH,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,gBAAiC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjC,GAEOT,IAAI,CAACU,GAAL,CAASC,GAAG,iBAAI,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEA;AAAd,OAAwBA,GAAG,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAhB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhCD;;GAAMb,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\n\nconst Logs = () => {\n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getLogs();\n        // es-lint-disable-next-line\n    }, []);\n\n    const getLogs = async () => {\n        setLoading(true);\n        const res = await fetch('/api/logs');\n        const data = await res.json();\n\n        setLogs(data);\n        setLoading(false);\n    }\n\n    if(loading) {\n        return <h4>Loading...</h4>\n    }\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">System Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs to show...</p>) : \n                (\n                    logs.map(log => <LogItem log={log} key={log.id} />)\n                )}\n        </ul>\n    )\n}\n\nexport default Logs\n"]},"metadata":{},"sourceType":"module"}