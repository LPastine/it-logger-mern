{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG // DELETE_LOG, \n// UPDATE_LOG,\n// SEARCH_LOGS, \n// SET_CURRENT, \n// CLEAR_CURRENT \n} from './types'; // Add new log to server\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Before setting response to json'); // const data = await res.json();\n\n    const res_text = await res.text;\n    const data = await JSON.parse(res_text);\n    console.log(data);\n    console.log('After setting data variable');\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","addLog","log","dispatch","setLoading","res","fetch","method","body","JSON","stringify","headers","console","res_text","text","data","parse","type","payload","err","response","statusText","getLogs","json"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,OAJJ,CAKI;AACA;AACA;AACA;AACA;AATJ,OAUO,SAVP,C,CAYA;;AACA,OAAO,MAAMC,MAAM,GAAIC,GAAD,IAAS,MAAMC,QAAN,IAAkB;AAC7C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAa;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAF0B;AAGhCS,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHuB,KAAb,CAAvB;AAOAC,IAAAA,OAAO,CAACV,GAAR,CAAY,iCAAZ,EAVA,CAWA;;AACA,UAAMW,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAA3B;AACA,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,KAAL,CAAWH,QAAX,CAAnB;AACAD,IAAAA,OAAO,CAACV,GAAR,CAAYa,IAAZ;AAEAH,IAAAA,OAAO,CAACV,GAAR,CAAY,6BAAZ;AAEAC,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEjB,OADD;AAELkB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAtBD,CAsBE,OAAOI,GAAP,EAAY;AACVhB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAElB,UADD;AAELmB,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CA7BM,C,CA+BP;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMnB,QAAN,IAAkB;AAC3C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,UAAMS,IAAI,GAAG,MAAMV,GAAG,CAACkB,IAAJ,EAAnB;AAEApB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEpB,QADD;AAELqB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOI,GAAP,EAAY;AACVhB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAElB,UADD;AAELmB,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH;AACJ,CAjBM,C,CAoBP;;AACA,OAAO,MAAMjB,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHa,IAAAA,IAAI,EAAEnB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { \n    GET_LOGS, \n    SET_LOADING, \n    LOGS_ERROR, \n    ADD_LOG, \n    // DELETE_LOG, \n    // UPDATE_LOG,\n    // SEARCH_LOGS, \n    // SET_CURRENT, \n    // CLEAR_CURRENT \n} from './types';\n\n// Add new log to server\nexport const addLog = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs',{\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        console.log('Before setting response to json');\n        // const data = await res.json();\n        const res_text = await res.text;\n        const data = await JSON.parse(res_text);\n        console.log(data)\n\n        console.log('After setting data variable');\n\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/api/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.statusText\n        })\n    }\n};\n\n\n// Set loading to true\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    };\n};"]},"metadata":{},"sourceType":"module"}