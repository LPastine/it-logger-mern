{"ast":null,"code":"var _jsxFileName = \"/Users/LP1/Dev/it_logger_fs/client/src/components/techs/TechSelectOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TechSelectOptions = ({\n  getTechs,\n  tech: {\n    techs,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line\n  }, []);\n  return !loading && techs !== null && techs.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: `${t.firstName} ${t.lastName}`,\n    children: [t.firstName, \" \", t.lastName]\n  }, t.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 54\n  }, this));\n};\n\n_s(TechSelectOptions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TechSelectOptions;\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"TechSelectOptions\");","map":{"version":3,"sources":["/Users/LP1/Dev/it_logger_fs/client/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","connect","PropTypes","getTechs","TechSelectOptions","tech","techs","loading","map","t","firstName","lastName","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AAAA;;AAClEP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,GADI,CAEZ;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,SACI,CAACI,OAAD,IAAYD,KAAK,KAAK,IAAtB,IAA8BA,KAAK,CAACE,GAAN,CAAUC,CAAC,iBAAI;AAAmB,IAAA,KAAK,EAAG,GAAEA,CAAC,CAACC,SAAU,IAAGD,CAAC,CAACE,QAAS,EAAvD;AAAA,eAA4DF,CAAC,CAACC,SAA9D,OAA0ED,CAAC,CAACE,QAA5E;AAAA,KAAaF,CAAC,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,UAAf,CADlC;AAGH,CARD;;GAAMR,iB;;KAAAA,iB;AAUNA,iBAAiB,CAACS,SAAlB,GAA8B;AAC1BR,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADG;AAE1BZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeD;AAFC,CAA9B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,iBAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n    useEffect(() => {\n        getTechs();\n        // eslint-disable-next-line\n    },[]);\n    return (\n        !loading && techs !== null && techs.map(t => <option key={t.id} value={`${t.firstName} ${t.lastName}`} >{t.firstName} {t.lastName}</option>)\n    )\n}\n\nTechSelectOptions.propTypes = {\n    tech: PropTypes.object.isRequired,\n    getTechs: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);"]},"metadata":{},"sourceType":"module"}